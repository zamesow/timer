{"version":3,"sources":["App.module.css","App.jsx","index.jsx"],"names":["module","exports","App","state","timerIsRun","time","intervalId","pause","startTime","saveTimeNow","deltaTime","newDeltaTime","intervalFirstTime","setInterval","timeNow","Date","now","setState","getTimeComponents","hours","mins","secs","viewTime","intervalAfterPause","newStartTime","start","clearInterval","stop","saveDeltaTime","togglePause","pad","value","String","padStart","Math","floor","this","console","log","className","m","container","btnBlock","type","btn","onClick","timer","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d8c7064.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnBlock\":\"App_btnBlock__z_JsU\",\"btn\":\"App_btn__1do8Z\",\"timer\":\"App_timer__2soT_\"};","/* eslint-disable no-return-assign */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable react/no-unused-state */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable react/state-in-constructor */\n/* eslint-disable react/no-unknown-property */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport m from './App.module.css';\n\nclass App extends Component {\n  state = {\n    timerIsRun: false,\n    time: null,\n    intervalId: null,\n    pause: false,\n    startTime: 0,\n    saveTimeNow: 0,\n    deltaTime: 0,\n    newDeltaTime: 0,\n  };\n\n  componentDidMount() {\n    this.stop();\n  }\n\n  componentDidUpdate() {\n    const { time } = this.state;\n    console.log(time);\n  }\n\n  // ============================================== управление состояниями\n\n  intervalFirstTime = startTime => {\n    const intervalId = setInterval(() => {\n      const timeNow = Date.now();\n      const deltaTime = timeNow - startTime;\n\n      this.setState({ saveTimeNow: timeNow, startTime, deltaTime });\n\n      const { hours, mins, secs } = this.getTimeComponents(deltaTime);\n      this.viewTime({ hours, mins, secs });\n    }, 1000);\n\n    this.setState({ intervalId });\n  };\n\n  intervalAfterPause = () => {\n    const { deltaTime } = this.state;\n\n    const newStartTime = Date.now() - deltaTime;\n    const intervalId = setInterval(() => {\n      const newDeltaTime = Date.now() - newStartTime;\n\n      this.setState({ deltaTime: newDeltaTime });\n\n      const { hours, mins, secs } = this.getTimeComponents(newDeltaTime);\n      this.viewTime({ hours, mins, secs });\n    }, 1000);\n\n    this.setState({ intervalId });\n  };\n\n  // ============================================== кнопочки (неоптимизированное зло)\n\n  start = () => {\n    this.setState({\n      timerIsRun: true,\n      pause: false,\n      deltaTime: 0,\n    });\n\n    const { intervalId } = this.state;\n    clearInterval(intervalId);\n\n    const startTime = Date.now();\n    this.intervalFirstTime(startTime);\n  };\n\n  stop = () => {\n    const { intervalId } = this.state;\n    this.setState({ timerIsRun: true, pause: false, saveDeltaTime: 0 });\n\n    clearInterval(intervalId);\n\n    const { hours, mins, secs } = this.getTimeComponents(0);\n    this.viewTime({ hours, mins, secs });\n  };\n\n  togglePause = () => {\n    const { intervalId, pause } = this.state;\n\n    if (!pause) {\n      this.setState({ pause: true });\n      clearInterval(intervalId);\n    }\n\n    if (pause) {\n      this.setState({ pause: false });\n      this.intervalAfterPause();\n    }\n  };\n\n  // ============================================== формат отображения времени\n\n  viewTime = ({ hours, mins, secs }) => {\n    this.setState({\n      time: `${hours}:${mins}:${secs}`,\n    });\n  };\n\n  // ============================================== ф-лы по высчитыванию времени\n\n  pad = value => String(value).padStart(2, '0');\n\n  getTimeComponents = time => {\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { hours, mins, secs };\n  };\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <>\n        {time && (\n          <div className={m.container}>\n            <div className={m.btnBlock}>\n              <button type=\"button\" className={m.btn} onClick={this.start}>\n                Start\n              </button>\n              <button type=\"button\" className={m.btn} onClick={this.stop}>\n                Stop\n              </button>\n              <button\n                type=\"button\"\n                className={m.btn}\n                onClick={this.togglePause}\n              >\n                Wait\n              </button>\n            </div>\n            <div className={m.timer}>{time}</div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}